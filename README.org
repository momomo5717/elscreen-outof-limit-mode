* elscreen-outof-limit-mode

  elscreen-outof-limit-mode overrides elscreen-create-internal and elscreen-split to create any number of screens.

** Requirements

  elscreen.el : https://github.com/emacs-jp/elscreen

  You can also install from MELPA, El-Get.

  This was tested on Emacs 24.4.1 (emacs-mac-app 5.2_0)

** Setup

  #+BEGIN_SRC emacs-lisp

    (add-to-list 'load-path "/path/to/elscreen-outof-limit-mode")
    (require 'elscreen-outof-limit-mode)
    (elscreen-outof-limit-mode t)

  #+END_SRC

  M-x elscreen-outof-limit-mode-off turns off the mode.

  M-x elscreen-outof-limit-mode-off-and-kill turns off the mode and kills screens more than no.9.

** Custom Variable

*** elscreen-screen-limit-number

   Type : nil or integer

   Default : nil

   If it is nil, it can create any number of screens.

** Option

*** elscreen-renumber-create.el

**** Requirements : cl-lib.el, elscreen.el

**** Setup

    #+BEGIN_SRC emacs-lisp

      (require 'elscreen-renumber-create)
      ;; example key bindings
      (define-key elscreen-map (kbd "t") 'elscreen-renumber-create)
      (define-key elscreen-map (kbd "T") 'elscreen-renumber-create-right)

    #+END_SRC

**** elscreen-renumber : Renumber elscreen from 0 to n

    It works like the following.

    =|2 aaa |4 bbb |6 ccc |7 ddd |...=

    ->  =|0 aaa |1 bbb |2 ccc |3 ddd |...=

**** elscreen-renumber-create : create a screen to the right edge

    =|1 aaa |3 bbb |6 ccc |7 ddd |...=

    -> =|0 aaa |1 bbb |2 ccc |3 ddd |... |n new screen |=

**** elscreen-renumber-create-right : create screen to the right side of the current screen

    If the current screen is 3, it works like the following.

    =|1 aaa |3 bbb |6 ccc |7 ddd |...=

    -> =|0 aaa |1 bbb |2 new screen |3 ccc |4 ddd |...=
